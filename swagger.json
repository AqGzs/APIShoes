{
  "openapi": "3.0.0",
  "info": {
    "title": "Shoe Store API",
    "version": "1.0.0",
    "description": "API for managing a shoe store"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Local server"
    }
  ],
  "components": {
    "schemas": {
     "Stock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          }
        },
        "required": ["id", "size", "quantity"]
      },
      "Shoe": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Stock"
            }
          },
          "colors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "imageUrl": {
            "type": "string"
          },
          "discriptions": {
            "type": "string"
          }
        },
        "required": ["name", "brand", "price", "stocks", "colors", "imageUrl","discriptions"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "dob": {
            "type": "string",
            "format": "date"
          },
          "imageUrl": {
            "type": "string"
          }
        },
        "required": ["name", "email", "password"]
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "shoeId": {
            "type": "string"
          },
        
          "priceShoe": {
            "type": "number"
          },
          "stock": {
            "$ref": "#/components/schemas/Stock"
          }
        },
        "required": ["orderId", "shoeId",  "priceShoe", "stock"]
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "total": {
            "type": "number"
          },
          "dateOrder": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "shipped", "delivered", "cancelled"]
          }
        },
        "required": ["userId", "items", "total", "dateOrder", "status"]
      },
    "CartItem": {
        "type": "object",
        "properties": {
          "shoeId": {
            "type": "string"
          },
          "stock": {
            "$ref": "#/components/schemas/Stock"
          }
        },
        "required": ["shoeId", "stock"]
      },

      "Cart": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          }
        },
        "required": ["userId", "items"]
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": ["name"]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "method": {
            "type": "string",
            "enum": ["credit_card", "paypal", "cash_on_delivery"]
          },
          "status": {
            "type": "string",
            "enum": ["pending", "completed", "failed"]
          },
          "datePayment": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["orderId", "amount", "method", "status", "datePayment"]
      }
    }
  },
  "paths": {
  "/shoes": {
        "post": {
          "summary": "Create a new shoe",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shoe"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Shoe created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Shoe"
                  }
                }
              }
            }
          }
        },
        "get": {
          "summary": "Get all shoes",
          "responses": {
            "200": {
              "description": "A list of shoes",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Shoe"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/shoes/{id}": {
        "get": {
          "summary": "Get a single shoe by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A single shoe",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Shoe"
                  }
                }
              }
            },
            "404": {
              "description": "Shoe not found"
            }
          }
        },
        "put": {
          "summary": "Update a shoe by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shoe"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Shoe updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Shoe"
                  }
                }
              }
            },
            "404": {
              "description": "Shoe not found"
            }
          }
        },
        "delete": {
          "summary": "Delete a shoe by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Shoe deleted successfully"
            },
            "404": {
              "description": "Shoe not found"
            }
          }
        }
      },
      "/stocks": {
      "get": {
        "summary": "Get all stocks",
        "responses": {
          "200": {
            "description": "A list of stocks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Stock"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new stock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Stock"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created stock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stock"
                }
              }
            }
          }
        }
      }
    },
    "/stocks/{id}": {
      "get": {
        "summary": "Get a stock by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested stock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stock"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a stock by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Stock"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated stock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stock"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a stock by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The stock was deleted"
          }
        }
      }
    },
    "/favorites": {
      "get": {
        "summary": "Get favorite shoes",
        "responses": {
          "200": {
            "description": "A list of favorite shoes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shoe"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a shoe to favorites",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shoeId": {
                    "type": "string"
                  }
                },
                "required": ["shoeId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Shoe added to favorites",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shoe"
                }
              }
            }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "summary": "Get notifications",
        "responses": {
          "200": {
            "description": "A list of notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": ["id", "message", "date"]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
    "post": {
      "summary": "User registration",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": ["name", "email", "password"]
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User registered successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
      "/auth/recover": {
      "post": {
        "summary": "Recover password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Recovery email sent"
          }
        }
      }
    },
    "/auth/reset": {
      "post": {
        "summary": "Reset password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["token", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully"
          }
        }
      }
    },
    "/shoes/search": {
      "get": {
        "summary": "Search shoes with filters",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gender",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["male", "female", "unisex"]
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "minPrice",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxPrice",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shoe"
                  }
                }
              }
            }
          }
        }
      }
    },
  "/carts": {
      "post": {
        "summary": "Create a new cart",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cart"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cart created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all carts",
        "responses": {
          "200": {
            "description": "A list of carts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cart"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carts/{id}": {
      "get": {
        "summary": "Get a single cart by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single cart",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "404": {
            "description": "Cart not found"
          }
        }
      },
      "/cart/item/{id}": {
      "put": {
        "summary": "Update a cart by ID cart",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cart updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "404": {
            "description": "Cart not found"
          }
        }
      }
    } ,
      "delete": {
        "summary": "Delete a cart by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cart deleted successfully"
          },
          "404": {
            "description": "Cart not found"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "summary": "Create a new category",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all categories",
        "responses": {
          "200": {
            "description": "A list of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "summary": "Get a single category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "put": {
        "summary": "Update a category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    },
    "/payments": {
      "post": {
        "summary": "Create a new payment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all payments",
        "responses": {
          "200": {
            "description": "A list of payments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payments/{id}": {
      "get": {
        "summary": "Get a single payment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single payment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "404": {
            "description": "Payment not found"
          }
        }
      },
      "put": {
        "summary": "Update a payment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "404": {
            "description": "Payment not found"
          }
        }
      }
    },
  
    "/users/{id}": {
      "get": {
        "summary": "Get user details by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user details by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  }
 }



